/*
* Copyright 2015, Gregg Tavares.
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are
* met:
*
*     * Redistributions of source code must retain the above copyright
* notice, this list of conditions and the following disclaimer.
*     * Redistributions in binary form must reproduce the above
* copyright notice, this list of conditions and the following disclaimer
* in the documentation and/or other materials provided with the
* distribution.
*     * Neither the name of Gregg Tavares. nor the names of his
* contributors may be used to endorse or promote products derived from
* this software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
* "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
* A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
* OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
* OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/"use strict";!function(root,factory){if("function"==typeof define&&define.amd)define([],factory);else{var lib=factory.call(root);root.twgl=root.twgl||{},Object.keys(lib).forEach(function(key){root.twgl[key]=lib[key]})}}(this,function(){function create3DContext(canvas,opt_attribs){for(var names=["webgl","experimental-webgl"],context=null,ii=0;ii<names.length;++ii){try{context=canvas.getContext(names[ii],opt_attribs)}catch(e){}if(context)break}return context}function getWebGLContext(canvas,opt_attribs){var gl=create3DContext(canvas,opt_attribs);return gl}function loadShader(gl,shaderSource,shaderType,opt_errorCallback){var errFn=opt_errorCallback||error,shader=gl.createShader(shaderType);gl.shaderSource(shader,shaderSource),gl.compileShader(shader);var compiled=gl.getShaderParameter(shader,gl.COMPILE_STATUS);if(!compiled){var lastError=gl.getShaderInfoLog(shader);return errFn("*** Error compiling shader '"+shader+"':"+lastError),gl.deleteShader(shader),null}return shader}function createProgram(gl,shaders,opt_attribs,opt_locations,opt_errorCallback){var errFn=opt_errorCallback||error,program=gl.createProgram();shaders.forEach(function(shader){gl.attachShader(program,shader)}),opt_attribs&&opt_attribs.forEach(function(attrib,ndx){gl.bindAttribLocation(program,opt_locations?opt_locations[ndx]:ndx,attrib)}),gl.linkProgram(program);var linked=gl.getProgramParameter(program,gl.LINK_STATUS);if(!linked){var lastError=gl.getProgramInfoLog(program);return errFn("Error in program linking:"+lastError),gl.deleteProgram(program),null}return program}function createShaderFromScript(gl,scriptId,opt_shaderType,opt_errorCallback){var shaderType,shaderSource="",shaderScript=document.getElementById(scriptId);if(!shaderScript)throw"*** Error: unknown script element"+scriptId;if(shaderSource=shaderScript.text,!opt_shaderType)if("x-shader/x-vertex"===shaderScript.type)shaderType=gl.VERTEX_SHADER;else if("x-shader/x-fragment"===shaderScript.type)shaderType=gl.FRAGMENT_SHADER;else if(shaderType!==gl.VERTEX_SHADER&&shaderType!==gl.FRAGMENT_SHADER)throw"*** Error: unknown shader type";return loadShader(gl,shaderSource,opt_shaderType?opt_shaderType:shaderType,opt_errorCallback)}function createProgramFromScripts(gl,shaderScriptIds,opt_attribs,opt_locations,opt_errorCallback){for(var shaders=[],ii=0;ii<shaderScriptIds.length;++ii){var shader=createShaderFromScript(gl,shaderScriptIds[ii],gl[defaultShaderType[ii]],opt_errorCallback);if(!shader)return null;shaders.push(shader)}return createProgram(gl,shaders,opt_attribs,opt_locations,opt_errorCallback)}function createProgramFromSources(gl,shaderSources,opt_attribs,opt_locations,opt_errorCallback){for(var shaders=[],ii=0;ii<shaderSources.length;++ii){var shader=loadShader(gl,shaderSources[ii],gl[defaultShaderType[ii]],opt_errorCallback);if(!shader)return null;shaders.push(shader)}return createProgram(gl,shaders,opt_attribs,opt_locations,opt_errorCallback)}function getBindPointForSamplerType(gl,type){return type===gl.SAMPLER_2D?gl.TEXTURE_2D:type===gl.SAMPLER_CUBE?gl.TEXTURE_CUBE_MAP:void 0}function createUniformSetters(gl,program){function createUniformSetter(program,uniformInfo){var location=gl.getUniformLocation(program,uniformInfo.name),type=uniformInfo.type,isArray=uniformInfo.size>1&&"[0]"===uniformInfo.name.substr(-3);if(type===gl.FLOAT&&isArray)return function(v){gl.uniform1fv(location,v)};if(type===gl.FLOAT)return function(v){gl.uniform1f(location,v)};if(type===gl.FLOAT_VEC2)return function(v){gl.uniform2fv(location,v)};if(type===gl.FLOAT_VEC3)return function(v){gl.uniform3fv(location,v)};if(type===gl.FLOAT_VEC4)return function(v){gl.uniform4fv(location,v)};if(type===gl.INT&&isArray)return function(v){gl.uniform1iv(location,v)};if(type===gl.INT)return function(v){gl.uniform1i(location,v)};if(type===gl.INT_VEC2)return function(v){gl.uniform2iv(location,v)};if(type===gl.INT_VEC3)return function(v){gl.uniform3iv(location,v)};if(type===gl.INT_VEC4)return function(v){gl.uniform4iv(location,v)};if(type===gl.BOOL)return function(v){gl.uniform1iv(location,v)};if(type===gl.BOOL_VEC2)return function(v){gl.uniform2iv(location,v)};if(type===gl.BOOL_VEC3)return function(v){gl.uniform3iv(location,v)};if(type===gl.BOOL_VEC4)return function(v){gl.uniform4iv(location,v)};if(type===gl.FLOAT_MAT2)return function(v){gl.uniformMatrix2fv(location,!1,v)};if(type===gl.FLOAT_MAT3)return function(v){gl.uniformMatrix3fv(location,!1,v)};if(type===gl.FLOAT_MAT4)return function(v){gl.uniformMatrix4fv(location,!1,v)};if((type===gl.SAMPLER_2D||type===gl.SAMPLER_CUBE)&&isArray){for(var units=[],ii=0;ii<info.size;++ii)units.push(textureUnit++);return function(bindPoint,units){return function(textures){gl.uniform1iv(location,units),textures.forEach(function(texture,index){gl.activeTexture(gl.TEXTURE0+units[index]),gl.bindTexture(bindPoint,tetxure)})}}(getBindPointForSamplerType(gl,type),units)}if(type===gl.SAMPLER_2D||type===gl.SAMPLER_CUBE)return function(bindPoint,unit){return function(texture){gl.uniform1i(location,unit),gl.activeTexture(gl.TEXTURE0+unit),gl.bindTexture(bindPoint,texture)}}(getBindPointForSamplerType(gl,type),textureUnit++);throw"unknown type: 0x"+type.toString(16)}for(var textureUnit=0,uniformSetters={},numUniforms=gl.getProgramParameter(program,gl.ACTIVE_UNIFORMS),ii=0;numUniforms>ii;++ii){var uniformInfo=gl.getActiveUniform(program,ii);if(!uniformInfo)break;var name=uniformInfo.name;"[0]"===name.substr(-3)&&(name=name.substr(0,name.length-3));var setter=createUniformSetter(program,uniformInfo);uniformSetters[name]=setter}return uniformSetters}function setUniforms(setters,values){setters=setters.uniformSetters||setters,Object.keys(values).forEach(function(name){var setter=setters[name];setter&&setter(values[name])})}function createAttributeSetters(gl,program){function createAttribSetter(index){return function(b){gl.bindBuffer(gl.ARRAY_BUFFER,b.buffer),gl.enableVertexAttribArray(index),gl.vertexAttribPointer(index,b.numComponents||b.size,b.type||gl.FLOAT,b.normalize||!1,b.stride||0,b.offset||0)}}for(var attribSetters={},numAttribs=gl.getProgramParameter(program,gl.ACTIVE_ATTRIBUTES),ii=0;numAttribs>ii;++ii){var attribInfo=gl.getActiveAttrib(program,ii);if(!attribInfo)break;var index=gl.getAttribLocation(program,attribInfo.name);attribSetters[attribInfo.name]=createAttribSetter(index)}return attribSetters}function setAttributes(setters,buffers){Object.keys(buffers).forEach(function(name){var setter=setters[name];setter&&setter(buffers[name])})}function setBuffersAndAttributes(gl,programInfo,buffers){setAttributes(programInfo.attribSetters||programInfo,buffers.attribs),buffers.indices&&gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,buffers.indices)}function createProgramInfo(gl,shaderSources,opt_attribs,opt_locations,opt_errorCallback){shaderSources=shaderSources.map(function(source){var script=document.getElementById(source);return script?script.text:source});var program=createProgramFromSources(gl,shaderSources,opt_attribs,opt_locations,opt_errorCallback);if(!program)return null;var uniformSetters=createUniformSetters(gl,program),attribSetters=createAttributeSetters(gl,program);return{program:program,uniformSetters:uniformSetters,attribSetters:attribSetters}}function resizeCanvasToDisplaySize(canvas,multiplier){multiplier=multiplier||1,multiplier=Math.max(1,multiplier);var width=canvas.clientWidth*multiplier|0,height=canvas.clientHeight*multiplier|0;return canvas.width!==width||canvas.height!==height?(canvas.width=width,canvas.height=height,!0):!1}function createBufferFromTypedArray(gl,array,type,drawType){type=type||gl.ARRAY_BUFFER;var buffer=gl.createBuffer();return gl.bindBuffer(type,buffer),gl.bufferData(type,array,drawType||gl.STATIC_DRAW),buffer}function allButIndices(name){return"indices"!==name}function createMapping(obj){var mapping={};return Object.keys(obj).filter(allButIndices).forEach(function(key){mapping["a_"+key]=key}),mapping}function getGLTypeForTypedArray(gl,typedArray){if(typedArray instanceof Int8Array)return gl.BYTE;if(typedArray instanceof Uint8Array)return gl.UNSIGNED_BYTE;if(typedArray instanceof Int16Array)return gl.SHORT;if(typedArray instanceof Uint16Array)return gl.UNSIGNED_SHORT;if(typedArray instanceof Int32Array)return gl.INT;if(typedArray instanceof Uint32Array)return gl.UNSIGNED_INT;if(typedArray instanceof Float32Array)return gl.FLOAT;throw"unsupported typed array type"}function getNormalizationForTypedArray(typedArray){return typedArray instanceof Int8Array?!0:typedArray instanceof Uint8Array?!0:!1}function isArrayBuffer(a){return a.buffer&&a.buffer instanceof ArrayBuffer}function guessNumComponentsFromName(name,length){var numComponents;if(numComponents=name.indexOf("coord")>=0?2:name.indexOf("color")>=0?4:3,length%numComponents>0)throw"can not guess numComponents. You should specify it.";return numComponents}function makeTypedArray(array,name){if(isArrayBuffer(array))return array;Array.isArray(array)&&(array={data:array});var Type=array.type;return Type||(Type="indices"===name?Uint16Array:Float32Array),new Type(array.data)}function createAttribsFromArrays(gl,arrays,opt_mapping){var mapping=opt_mapping||createMapping(arrays),attribs={};return Object.keys(mapping).forEach(function(attribName){var bufferName=mapping[attribName],array=makeTypedArray(arrays[bufferName],bufferName);attribs[attribName]={buffer:createBufferFromTypedArray(gl,array),numComponents:array.numComponents||guessNumComponentsFromName(bufferName),type:getGLTypeForTypedArray(gl,array),normalize:getNormalizationForTypedArray(array)}}),attribs}function getNumElementsFromNonIndexedArrays(arrays){for(var key,ii=0;ii<positionKeys.length&&(key=positionKeys[ii],!(key in arrays));++ii);ii===positionKeys.length&&(key=Object.keys(arrays)[0]);var length=array.length||array.data.length,numComponents=array.numComponents||guessNumComponentsFromName(key,length),numElements=length/numComponents;if(length%numComponents>0)throw"numComponents "+numComponent+" not correct for length "+length;return numElements}function createBufferInfoFromArrays(gl,arrays,opt_mapping){var bufferInfo={attribs:createAttribsFromArrays(gl,arrays,opt_mapping)},indices=arrays.indices;return indices?(indices=makeTypedArray(indices,"indices"),bufferInfo.indices=createBufferFromTypedArray(gl,indices,gl.ELEMENT_ARRAY_BUFFER),bufferInfo.numElements=indices.length):bufferInfo.numElements=getNumElementsFromNonIndexedArrays(arrays),bufferInfo}function createBuffersFromArrays(gl,arrays){var buffers={};return Object.keys(arrays).forEach(function(key){var type="indices"===key?gl.ELEMENT_ARRAY_BUFFER:gl.ARRAY_BUFFER,array=makeTypedArray(arrays[key],name);buffers[key]=createBufferFromTypedArray(gl,array,type)}),buffers}function drawBufferInfo(gl,type,bufferInfo,count,offset){var indices=bufferInfo.indices,numElements=void 0===count?bufferInfo.numElements:count;offset=void 0===offset?offset:0,indices?gl.drawElements(type,numElements,gl.UNSIGNED_SHORT,offset):gl.drawArrays(type,offset,numElements)}function drawObjectList(objectsToDraw){var lastUsedProgramInfo=null,lastUsedBufferInfo=null;objectsToDraw.forEach(function(object){var programInfo=object.programInfo,bufferInfo=object.bufferInfo;programInfo!==lastUsedProgramInfo&&(lastUsedProgramInfo=programInfo,gl.useProgram(programInfo.program)),bufferInfo!==lastUsedBufferInfo&&(lastUsedBufferInfo=bufferInfo,setBuffersAndAttributes(gl,programInfo,bufferInfo)),setUniforms(programInfo,object.uniforms),drawBufferInfo(gl,object.type||gl.TRIANGLES,bufferInfo)})}var error=this.console&&this.console.error?this.console.error.bind(this.console):function(){},defaultShaderType=["VERTEX_SHADER","FRAGMENT_SHADER"],positionKeys=["position","positions","a_position"];return{createAttribsFromArrays:createAttribsFromArrays,createBuffersFromArrays:createBuffersFromArrays,createBufferInfoFromArrays:createBufferInfoFromArrays,createAttributeSetters:createAttributeSetters,createProgram:createProgram,createProgramFromScripts:createProgramFromScripts,createProgramFromSources:createProgramFromSources,createProgramInfo:createProgramInfo,createUniformSetters:createUniformSetters,drawBufferInfo:drawBufferInfo,drawObjectList:drawObjectList,getWebGLContext:getWebGLContext,resizeCanvasToDisplaySize:resizeCanvasToDisplaySize,setAttributes:setAttributes,setBuffersAndAttributes:setBuffersAndAttributes,setUniforms:setUniforms}});