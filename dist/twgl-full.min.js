/*
* Copyright 2015, Gregg Tavares.
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are
* met:
*
*     * Redistributions of source code must retain the above copyright
* notice, this list of conditions and the following disclaimer.
*     * Redistributions in binary form must reproduce the above
* copyright notice, this list of conditions and the following disclaimer
* in the documentation and/or other materials provided with the
* distribution.
*     * Neither the name of Gregg Tavares. nor the names of his
* contributors may be used to endorse or promote products derived from
* this software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
* "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
* A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
* OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
* OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/"use strict";(function(root,factory){if(typeof define==="function"&&define.amd){define([],factory)}else{var lib=factory.call(root);root.twgl=root.twgl||{};Object.keys(lib).forEach(function(key){root.twgl[key]=lib[key]})}})(this,function(){var error=this.console&&this.console.error?this.console.error.bind(this.console):function(){};function create3DContext(canvas,opt_attribs){var names=["webgl","experimental-webgl"];var context=null;for(var ii=0;ii<names.length;++ii){try{context=canvas.getContext(names[ii],opt_attribs)}catch(e){}if(context){break}}return context}function getWebGLContext(canvas,opt_attribs){var gl=create3DContext(canvas,opt_attribs);return gl}function loadShader(gl,shaderSource,shaderType,opt_errorCallback){var errFn=opt_errorCallback||error;var shader=gl.createShader(shaderType);gl.shaderSource(shader,shaderSource);gl.compileShader(shader);var compiled=gl.getShaderParameter(shader,gl.COMPILE_STATUS);if(!compiled){var lastError=gl.getShaderInfoLog(shader);errFn("*** Error compiling shader '"+shader+"':"+lastError);gl.deleteShader(shader);return null}return shader}function createProgram(gl,shaders,opt_attribs,opt_locations,opt_errorCallback){var errFn=opt_errorCallback||error;var program=gl.createProgram();shaders.forEach(function(shader){gl.attachShader(program,shader)});if(opt_attribs){opt_attribs.forEach(function(attrib,ndx){gl.bindAttribLocation(program,opt_locations?opt_locations[ndx]:ndx,attrib)})}gl.linkProgram(program);var linked=gl.getProgramParameter(program,gl.LINK_STATUS);if(!linked){var lastError=gl.getProgramInfoLog(program);errFn("Error in program linking:"+lastError);gl.deleteProgram(program);return null}return program}function createShaderFromScript(gl,scriptId,opt_shaderType,opt_errorCallback){var shaderSource="";var shaderType;var shaderScript=document.getElementById(scriptId);if(!shaderScript){throw"*** Error: unknown script element"+scriptId}shaderSource=shaderScript.text;if(!opt_shaderType){if(shaderScript.type==="x-shader/x-vertex"){shaderType=gl.VERTEX_SHADER}else if(shaderScript.type==="x-shader/x-fragment"){shaderType=gl.FRAGMENT_SHADER}else if(shaderType!==gl.VERTEX_SHADER&&shaderType!==gl.FRAGMENT_SHADER){throw"*** Error: unknown shader type"}}return loadShader(gl,shaderSource,opt_shaderType?opt_shaderType:shaderType,opt_errorCallback)}var defaultShaderType=["VERTEX_SHADER","FRAGMENT_SHADER"];function createProgramFromScripts(gl,shaderScriptIds,opt_attribs,opt_locations,opt_errorCallback){var shaders=[];for(var ii=0;ii<shaderScriptIds.length;++ii){var shader=createShaderFromScript(gl,shaderScriptIds[ii],gl[defaultShaderType[ii]],opt_errorCallback);if(!shader){return null}shaders.push(shader)}return createProgram(gl,shaders,opt_attribs,opt_locations,opt_errorCallback)}function createProgramFromSources(gl,shaderSources,opt_attribs,opt_locations,opt_errorCallback){var shaders=[];for(var ii=0;ii<shaderSources.length;++ii){var shader=loadShader(gl,shaderSources[ii],gl[defaultShaderType[ii]],opt_errorCallback);if(!shader){return null}shaders.push(shader)}return createProgram(gl,shaders,opt_attribs,opt_locations,opt_errorCallback)}function getBindPointForSamplerType(gl,type){if(type===gl.SAMPLER_2D){return gl.TEXTURE_2D}if(type===gl.SAMPLER_CUBE){return gl.TEXTURE_CUBE_MAP}}function createUniformSetters(gl,program){var textureUnit=0;function createUniformSetter(program,uniformInfo){var location=gl.getUniformLocation(program,uniformInfo.name);var type=uniformInfo.type;var isArray=uniformInfo.size>1&&uniformInfo.name.substr(-3)==="[0]";if(type===gl.FLOAT&&isArray){return function(v){gl.uniform1fv(location,v)}}if(type===gl.FLOAT){return function(v){gl.uniform1f(location,v)}}if(type===gl.FLOAT_VEC2){return function(v){gl.uniform2fv(location,v)}}if(type===gl.FLOAT_VEC3){return function(v){gl.uniform3fv(location,v)}}if(type===gl.FLOAT_VEC4){return function(v){gl.uniform4fv(location,v)}}if(type===gl.INT&&isArray){return function(v){gl.uniform1iv(location,v)}}if(type===gl.INT){return function(v){gl.uniform1i(location,v)}}if(type===gl.INT_VEC2){return function(v){gl.uniform2iv(location,v)}}if(type===gl.INT_VEC3){return function(v){gl.uniform3iv(location,v)}}if(type===gl.INT_VEC4){return function(v){gl.uniform4iv(location,v)}}if(type===gl.BOOL){return function(v){gl.uniform1iv(location,v)}}if(type===gl.BOOL_VEC2){return function(v){gl.uniform2iv(location,v)}}if(type===gl.BOOL_VEC3){return function(v){gl.uniform3iv(location,v)}}if(type===gl.BOOL_VEC4){return function(v){gl.uniform4iv(location,v)}}if(type===gl.FLOAT_MAT2){return function(v){gl.uniformMatrix2fv(location,false,v)}}if(type===gl.FLOAT_MAT3){return function(v){gl.uniformMatrix3fv(location,false,v)}}if(type===gl.FLOAT_MAT4){return function(v){gl.uniformMatrix4fv(location,false,v)}}if((type===gl.SAMPLER_2D||type===gl.SAMPLER_CUBE)&&isArray){var units=[];for(var ii=0;ii<info.size;++ii){units.push(textureUnit++)}return function(bindPoint,units){return function(textures){gl.uniform1iv(location,units);textures.forEach(function(texture,index){gl.activeTexture(gl.TEXTURE0+units[index]);gl.bindTexture(bindPoint,tetxure)})}}(getBindPointForSamplerType(gl,type),units)}if(type===gl.SAMPLER_2D||type===gl.SAMPLER_CUBE){return function(bindPoint,unit){return function(texture){gl.uniform1i(location,unit);gl.activeTexture(gl.TEXTURE0+unit);gl.bindTexture(bindPoint,texture)}}(getBindPointForSamplerType(gl,type),textureUnit++)}throw"unknown type: 0x"+type.toString(16)}var uniformSetters={};var numUniforms=gl.getProgramParameter(program,gl.ACTIVE_UNIFORMS);for(var ii=0;ii<numUniforms;++ii){var uniformInfo=gl.getActiveUniform(program,ii);if(!uniformInfo){break}var name=uniformInfo.name;if(name.substr(-3)==="[0]"){name=name.substr(0,name.length-3)}var setter=createUniformSetter(program,uniformInfo);uniformSetters[name]=setter}return uniformSetters}function setUniforms(setters,values){setters=setters.uniformSetters||setters;Object.keys(values).forEach(function(name){var setter=setters[name];if(setter){setter(values[name])}})}function createAttributeSetters(gl,program){var attribSetters={};function createAttribSetter(index){return function(b){gl.bindBuffer(gl.ARRAY_BUFFER,b.buffer);gl.enableVertexAttribArray(index);gl.vertexAttribPointer(index,b.numComponents||b.size,b.type||gl.FLOAT,b.normalize||false,b.stride||0,b.offset||0)}}var numAttribs=gl.getProgramParameter(program,gl.ACTIVE_ATTRIBUTES);for(var ii=0;ii<numAttribs;++ii){var attribInfo=gl.getActiveAttrib(program,ii);if(!attribInfo){break}var index=gl.getAttribLocation(program,attribInfo.name);attribSetters[attribInfo.name]=createAttribSetter(index)}return attribSetters}function setAttributes(setters,buffers){Object.keys(buffers).forEach(function(name){var setter=setters[name];if(setter){setter(buffers[name])}})}function setBuffersAndAttributes(gl,programInfo,buffers){setAttributes(programInfo.attribSetters||programInfo,buffers.attribs);if(buffers.indices){gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,buffers.indices)}}function createProgramInfo(gl,shaderSources,opt_attribs,opt_locations,opt_errorCallback){shaderSources=shaderSources.map(function(source){var script=document.getElementById(source);return script?script.text:source});var program=createProgramFromSources(gl,shaderSources,opt_attribs,opt_locations,opt_errorCallback);if(!program){return null}var uniformSetters=createUniformSetters(gl,program);var attribSetters=createAttributeSetters(gl,program);return{program:program,uniformSetters:uniformSetters,attribSetters:attribSetters}}function resizeCanvasToDisplaySize(canvas,multiplier){multiplier=multiplier||1;multiplier=Math.max(1,multiplier);var width=canvas.clientWidth*multiplier|0;var height=canvas.clientHeight*multiplier|0;if(canvas.width!==width||canvas.height!==height){canvas.width=width;canvas.height=height;return true}return false}function createBufferFromTypedArray(gl,array,type,drawType){type=type||gl.ARRAY_BUFFER;var buffer=gl.createBuffer();gl.bindBuffer(type,buffer);gl.bufferData(type,array,drawType||gl.STATIC_DRAW);return buffer}function allButIndices(name){return name!=="indices"}function createMapping(obj){var mapping={};Object.keys(obj).filter(allButIndices).forEach(function(key){mapping["a_"+key]=key});return mapping}function getGLTypeForTypedArray(gl,typedArray){if(typedArray instanceof Int8Array){return gl.BYTE}if(typedArray instanceof Uint8Array){return gl.UNSIGNED_BYTE}if(typedArray instanceof Int16Array){return gl.SHORT}if(typedArray instanceof Uint16Array){return gl.UNSIGNED_SHORT}if(typedArray instanceof Int32Array){return gl.INT}if(typedArray instanceof Uint32Array){return gl.UNSIGNED_INT}if(typedArray instanceof Float32Array){return gl.FLOAT}throw"unsupported typed array type"}function getNormalizationForTypedArray(typedArray){if(typedArray instanceof Int8Array){return true}if(typedArray instanceof Uint8Array){return true}return false}function isArrayBuffer(a){return a.buffer&&a.buffer instanceof ArrayBuffer}function guessNumComponentsFromName(name,length){var numComponents;if(name.indexOf("coord")>=0){numComponents=2}else if(name.indexOf("color")>=0){numComponents=4}else{numComponents=3}if(length%numComponents>0){throw"can not guess numComponents. You should specify it."}return numComponents}function makeTypedArray(array,name){if(isArrayBuffer(array)){return array}if(Array.isArray(array)){array={data:array}}var Type=array.type;if(!Type){if(name==="indices"){Type=Uint16Array}else{Type=Float32Array}}return new Type(array.data)}function createAttribsFromArrays(gl,arrays,opt_mapping){var mapping=opt_mapping||createMapping(arrays);var attribs={};Object.keys(mapping).forEach(function(attribName){var bufferName=mapping[attribName];var array=makeTypedArray(arrays[bufferName],bufferName);attribs[attribName]={buffer:createBufferFromTypedArray(gl,array),numComponents:array.numComponents||guessNumComponentsFromName(bufferName),type:getGLTypeForTypedArray(gl,array),normalize:getNormalizationForTypedArray(array)}});return attribs}var positionKeys=["position","positions","a_position"];function getNumElementsFromNonIndexedArrays(arrays){var key;for(var ii=0;ii<positionKeys.length;++ii){key=positionKeys[ii];if(key in arrays){break}}if(ii===positionKeys.length){key=Object.keys(arrays)[0]}var length=array.length||array.data.length;var numComponents=array.numComponents||guessNumComponentsFromName(key,length);var numElements=length/numComponents;if(length%numComponents>0){throw"numComponents "+numComponent+" not correct for length "+length}return numElements}function createBufferInfoFromArrays(gl,arrays,opt_mapping){var bufferInfo={attribs:createAttribsFromArrays(gl,arrays,opt_mapping)};var indices=arrays.indices;if(indices){indices=makeTypedArray(indices,"indices");bufferInfo.indices=createBufferFromTypedArray(gl,indices,gl.ELEMENT_ARRAY_BUFFER);bufferInfo.numElements=indices.length}else{bufferInfo.numElements=getNumElementsFromNonIndexedArrays(arrays)}return bufferInfo}function createBuffersFromArrays(gl,arrays){var buffers={};Object.keys(arrays).forEach(function(key){var type=key==="indices"?gl.ELEMENT_ARRAY_BUFFER:gl.ARRAY_BUFFER;var array=makeTypedArray(arrays[key],name);buffers[key]=createBufferFromTypedArray(gl,array,type)});return buffers}function drawBufferInfo(gl,type,bufferInfo,count,offset){var indices=bufferInfo.indices;var numElements=count===undefined?bufferInfo.numElements:count;offset=offset===undefined?offset:0;if(indices){gl.drawElements(type,numElements,gl.UNSIGNED_SHORT,offset)}else{gl.drawArrays(type,offset,numElements)}}function drawObjectList(objectsToDraw){var lastUsedProgramInfo=null;var lastUsedBufferInfo=null;objectsToDraw.forEach(function(object){var programInfo=object.programInfo;var bufferInfo=object.bufferInfo;if(programInfo!==lastUsedProgramInfo){lastUsedProgramInfo=programInfo;gl.useProgram(programInfo.program)}if(bufferInfo!==lastUsedBufferInfo){lastUsedBufferInfo=bufferInfo;setBuffersAndAttributes(gl,programInfo,bufferInfo)}setUniforms(programInfo,object.uniforms);drawBufferInfo(gl,gl.TRIANGLES,bufferInfo)})}return{createAttribsFromArrays:createAttribsFromArrays,createBuffersFromArrays:createBuffersFromArrays,createBufferInfoFromArrays:createBufferInfoFromArrays,createAttributeSetters:createAttributeSetters,createProgram:createProgram,createProgramFromScripts:createProgramFromScripts,createProgramFromSources:createProgramFromSources,createProgramInfo:createProgramInfo,createUniformSetters:createUniformSetters,drawBufferInfo:drawBufferInfo,drawObjectList:drawObjectList,getWebGLContext:getWebGLContext,resizeCanvasToDisplaySize:resizeCanvasToDisplaySize,setAttributes:setAttributes,setBuffersAndAttributes:setBuffersAndAttributes,setUniforms:setUniforms}});"use strict";(function(root,factory){if(typeof define==="function"&&define.amd){define([],factory)}else{var lib=factory.call(root);root.twgl=root.twgl||{};root.twgl.v3=lib}})(this,function(){var VecType=Float32Array;function create(){return new VecType(3)}function add(a,b,dst){dst=dst||new VecType(3);dst[0]=a[0]+b[0];dst[1]=a[1]+b[1];dst[2]=a[2]+b[2];return dst}function subtract(a,b,dst){dst=dst||new VecType(3);dst[0]=a[0]-b[0];dst[1]=a[1]-b[1];dst[2]=a[2]-b[2];return dst}function lerp(a,b,t,dst){dst=dst||new VecType(3);dst[0]=(1-t)*a[0]+t*b[0];dst[1]=(1-t)*a[1]+t*b[1];dst[2]=(1-t)*a[2]+t*b[2];return dst}function mulScalar(v,k,dst){dst=dst||new VecType(3);dst[0]=v[0]*k;dst[1]=v[1]*k;dst[2]=v[2]*k;return dst}function divScalar(v,k,dst){dst=dst||new VecType(3);dst[0]=v[0]/k;dst[1]=v[1]/k;dst[2]=v[2]/k;return dst}function cross(a,b,dst){dst=dst||new VecType(3);dst[0]=a[1]*b[2]-a[2]*b[1];dst[1]=a[2]*b[0]-a[0]*b[2];dst[2]=a[0]*b[1]-a[1]*b[0];return dst}function dot(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]}function length(v){return Math.sqrt(v[0]*v[0]+v[1]*v[1]+v[2]*v[2])}function lengthSq(v){return v[0]*v[0]+v[1]*v[1]+v[2]*v[2]}function normalize(a,dst){dst=dst||new VecType(3);var lenSq=a[0]*a[0]+a[1]*a[1]+a[2]*a[2];var len=Math.sqrt(lenSq);if(len>1e-5){dst[0]=a[0]/len;dst[1]=a[1]/len;dst[2]=a[2]/len}else{dst[0]=0;dst[1]=0;dst[2]=0}return dst}function negate(v,dst){dst=dst||new VecType(3);dst[0]=-v[0];dst[1]=-v[1];dst[2]=-v[2];return dst}function copy(v,dst){dst=dst||new VecType(3);dst[0]=v[0];dst[1]=v[1];dst[2]=v[2];return dst}function multiply(a,b,dst){dst=dst||new VecType(3);dst[0]=a[0]*b[0];dst[1]=a[1]*b[1];dst[2]=a[2]*b[2];return dst}function divide(a,b,dst){dst=dst||new VecType(3);dst[0]=a[0]/b[0];dst[1]=a[1]/b[1];dst[2]=a[2]/b[2];return dst}return{add:add,copy:copy,create:create,cross:cross,divide:divide,divScalar:divScalar,dot:dot,lerp:lerp,length:length,lengthSq:lengthSq,mulScalar:mulScalar,multiply:multiply,negate:negate,normalize:normalize,subtract:subtract}});"use strict";(function(root,factory){if(typeof define==="function"&&define.amd){define(["./v3"],factory)}else{var lib=factory.call(root);root.twgl=root.twgl||{};root.twgl.m4=lib}})(this,function(v3){v3=v3||this.twgl.v3;if(!v3){throw"need v3.js"}var MatType=Float32Array;var tempV3a=v3.create();var tempV3b=v3.create();var tempV3c=v3.create();function negate(m,dst){dst=dst||new MatType(16);dst[0]=-m[0];dst[1]=-m[1];dst[2]=-m[2];dst[3]=-m[3];dst[4]=-m[4];dst[5]=-m[5];dst[6]=-m[6];dst[7]=-m[7];dst[8]=-m[8];dst[9]=-m[9];dst[10]=-m[10];dst[11]=-m[11];dst[12]=-m[12];dst[13]=-m[13];dst[14]=-m[14];dst[15]=-m[15];return dst}function copy(m,dst){dst=dst||new MatType(16);dst[0]=m[0];dst[1]=m[1];dst[2]=m[2];dst[3]=m[3];dst[4]=m[4];dst[5]=m[5];dst[6]=m[6];dst[7]=m[7];dst[8]=m[8];dst[9]=m[9];dst[10]=m[10];dst[11]=m[11];dst[12]=m[12];dst[13]=m[13];dst[14]=m[14];dst[15]=m[15];return dst}function identity(dst){dst=dst||new MatType(16);dst[0]=1;dst[1]=0;dst[2]=0;dst[3]=0;dst[4]=0;dst[5]=1;dst[6]=0;dst[7]=0;dst[8]=0;dst[9]=0;dst[10]=1;dst[11]=0;dst[12]=0;dst[13]=0;dst[14]=0;dst[15]=1;return dst}function transpose(m,dst){dst=dst||new MatType(16);if(dst===m){var t;t=m[1];m[1]=m[4];m[4]=t;t=m[2];m[2]=m[8];m[8]=t;t=m[3];m[3]=m[12];m[12]=t;t=m[6];m[6]=m[9];m[9]=t;t=m[7];m[7]=m[13];m[13]=t;t=m[11];m[11]=m[14];m[14]=t;return dst}var m00=m[0*4+0];var m01=m[0*4+1];var m02=m[0*4+2];var m03=m[0*4+3];var m10=m[1*4+0];var m11=m[1*4+1];var m12=m[1*4+2];var m13=m[1*4+3];var m20=m[2*4+0];var m21=m[2*4+1];var m22=m[2*4+2];var m23=m[2*4+3];var m30=m[3*4+0];var m31=m[3*4+1];var m32=m[3*4+2];var m33=m[3*4+3];dst[0]=m00;dst[1]=m10;dst[2]=m20;dst[3]=m30;dst[4]=m01;dst[5]=m11;dst[6]=m21;dst[7]=m31;dst[8]=m02;dst[9]=m12;dst[10]=m22;dst[11]=m32;dst[12]=m03;dst[13]=m13;dst[14]=m23;dst[15]=m33;return dst}function inverse(m,dst){dst=dst||new MatType(16);var m00=m[0*4+0];var m01=m[0*4+1];var m02=m[0*4+2];var m03=m[0*4+3];var m10=m[1*4+0];var m11=m[1*4+1];var m12=m[1*4+2];var m13=m[1*4+3];var m20=m[2*4+0];var m21=m[2*4+1];var m22=m[2*4+2];var m23=m[2*4+3];var m30=m[3*4+0];var m31=m[3*4+1];var m32=m[3*4+2];var m33=m[3*4+3];var tmp_0=m22*m33;var tmp_1=m32*m23;var tmp_2=m12*m33;var tmp_3=m32*m13;var tmp_4=m12*m23;var tmp_5=m22*m13;var tmp_6=m02*m33;var tmp_7=m32*m03;var tmp_8=m02*m23;var tmp_9=m22*m03;var tmp_10=m02*m13;var tmp_11=m12*m03;var tmp_12=m20*m31;var tmp_13=m30*m21;var tmp_14=m10*m31;var tmp_15=m30*m11;var tmp_16=m10*m21;var tmp_17=m20*m11;var tmp_18=m00*m31;var tmp_19=m30*m01;var tmp_20=m00*m21;var tmp_21=m20*m01;var tmp_22=m00*m11;var tmp_23=m10*m01;var t0=tmp_0*m11+tmp_3*m21+tmp_4*m31-(tmp_1*m11+tmp_2*m21+tmp_5*m31);var t1=tmp_1*m01+tmp_6*m21+tmp_9*m31-(tmp_0*m01+tmp_7*m21+tmp_8*m31);var t2=tmp_2*m01+tmp_7*m11+tmp_10*m31-(tmp_3*m01+tmp_6*m11+tmp_11*m31);var t3=tmp_5*m01+tmp_8*m11+tmp_11*m21-(tmp_4*m01+tmp_9*m11+tmp_10*m21);var d=1/(m00*t0+m10*t1+m20*t2+m30*t3);dst[0]=d*t0;dst[1]=d*t1;dst[2]=d*t2;dst[3]=d*t3;dst[4]=d*(tmp_1*m10+tmp_2*m20+tmp_5*m30-(tmp_0*m10+tmp_3*m20+tmp_4*m30));dst[5]=d*(tmp_0*m00+tmp_7*m20+tmp_8*m30-(tmp_1*m00+tmp_6*m20+tmp_9*m30));dst[6]=d*(tmp_3*m00+tmp_6*m10+tmp_11*m30-(tmp_2*m00+tmp_7*m10+tmp_10*m30));dst[7]=d*(tmp_4*m00+tmp_9*m10+tmp_10*m20-(tmp_5*m00+tmp_8*m10+tmp_11*m20));dst[8]=d*(tmp_12*m13+tmp_15*m23+tmp_16*m33-(tmp_13*m13+tmp_14*m23+tmp_17*m33));dst[9]=d*(tmp_13*m03+tmp_18*m23+tmp_21*m33-(tmp_12*m03+tmp_19*m23+tmp_20*m33));dst[10]=d*(tmp_14*m03+tmp_19*m13+tmp_22*m33-(tmp_15*m03+tmp_18*m13+tmp_23*m33));dst[11]=d*(tmp_17*m03+tmp_20*m13+tmp_23*m23-(tmp_16*m03+tmp_21*m13+tmp_22*m23));dst[12]=d*(tmp_14*m22+tmp_17*m32+tmp_13*m12-(tmp_16*m32+tmp_12*m12+tmp_15*m22));dst[13]=d*(tmp_20*m32+tmp_12*m02+tmp_19*m22-(tmp_18*m22+tmp_21*m32+tmp_13*m02));dst[14]=d*(tmp_18*m12+tmp_23*m32+tmp_15*m02-(tmp_22*m32+tmp_14*m02+tmp_19*m12));dst[15]=d*(tmp_22*m22+tmp_16*m02+tmp_21*m12-(tmp_20*m12+tmp_23*m22+tmp_17*m02));return dst}function multiply(a,b,dst){dst=dst||new MatType(16);var a00=a[0];var a01=a[1];var a02=a[2];var a03=a[3];var a10=a[4+0];var a11=a[4+1];var a12=a[4+2];var a13=a[4+3];var a20=a[8+0];var a21=a[8+1];var a22=a[8+2];var a23=a[8+3];var a30=a[12+0];var a31=a[12+1];var a32=a[12+2];var a33=a[12+3];var b00=b[0];var b01=b[1];var b02=b[2];var b03=b[3];var b10=b[4+0];var b11=b[4+1];var b12=b[4+2];var b13=b[4+3];var b20=b[8+0];var b21=b[8+1];var b22=b[8+2];var b23=b[8+3];var b30=b[12+0];var b31=b[12+1];var b32=b[12+2];var b33=b[12+3];dst[0]=a00*b00+a01*b10+a02*b20+a03*b30;dst[1]=a00*b01+a01*b11+a02*b21+a03*b31;dst[2]=a00*b02+a01*b12+a02*b22+a03*b32;dst[3]=a00*b03+a01*b13+a02*b23+a03*b33;dst[4]=a10*b00+a11*b10+a12*b20+a13*b30;dst[5]=a10*b01+a11*b11+a12*b21+a13*b31;dst[6]=a10*b02+a11*b12+a12*b22+a13*b32;dst[7]=a10*b03+a11*b13+a12*b23+a13*b33;dst[8]=a20*b00+a21*b10+a22*b20+a23*b30;dst[9]=a20*b01+a21*b11+a22*b21+a23*b31;dst[10]=a20*b02+a21*b12+a22*b22+a23*b32;dst[11]=a20*b03+a21*b13+a22*b23+a23*b33;dst[12]=a30*b00+a31*b10+a32*b20+a33*b30;dst[13]=a30*b01+a31*b11+a32*b21+a33*b31;dst[14]=a30*b02+a31*b12+a32*b22+a33*b32;dst[15]=a30*b03+a31*b13+a32*b23+a33*b33;return dst}function setTranslation(a,dst){dst=dst||identity();dst[12]=v[0];dst[13]=v[1];dst[14]=v[2];dst[15]=1;return dst}function getTranslation(m,dst){dst=dst||v3.create();dst[0]=m[12];dst[1]=m[13];dst[2]=m[14];return dst}function getAxis(m,axis,dst){dst=dst||v3.create();var off=axis*4;dst[0]=m[off+0];dst[1]=m[off+1];dst[2]=m[off+2];return dst}function perspective(fieldOfViewYInRadians,aspect,zNear,zFar,dst){dst=dst||new MatType(16);var f=Math.tan(Math.PI*.5-.5*fieldOfViewYInRadians);var rangeInv=1/(zNear-zFar);dst[0]=f/aspect;dst[1]=0;dst[2]=0;dst[3]=0;dst[4]=0;dst[5]=f;dst[6]=0;dst[7]=0;dst[8]=0;dst[9]=0;dst[10]=(zNear+zFar)*rangeInv;dst[11]=-1;dst[12]=0;dst[13]=0;dst[14]=zNear*zFar*rangeInv*2;dst[15]=0;return dst}function ortho(left,right,bottom,top,near,far,dst){dst=dst||new MatType(16);dst[0]=2/(right-left);dst[1]=0;dst[2]=0;dst[3]=0;dst[4]=0;dst[5]=2/(top-bottom);dst[6]=0;dst[7]=0;dst[8]=0;dst[9]=0;dst[10]=-1/(far-near);dst[11]=0;dst[12]=(right+left)/(left-right);dst[13]=(top+bottom)/(bottom-top);dst[14]=-near/(near-far);dst[15]=1;return dst}function frustum(left,right,bottom,top,near,far,dst){dst=dst||new MatType(16);var dx=right-left;var dy=top-bottom;var dz=near-far;dst[0]=2*near/dx;dst[1]=0;dst[2]=0;dst[3]=0;dst[4]=0;dst[5]=2*near/dy;dst[6]=0;dst[7]=0;dst[8]=(left+right)/dx;dst[9]=(top+bottom)/dy;dst[10]=far/dz;dst[11]=-1;dst[12]=0;dst[13]=0;dst[14]=near*far/dz;dst[15]=0;return dst}function lookAt(eye,target,up,dst){dst=dst||new MatType(16);var xAxis=tempV3a;var yAxis=tempV3b;var zAxis=tempV3c;v3.normalize(v3.subtract(eye,target,zAxis),zAxis);v3.cross(up,zAxis,xAxis);v3.cross(zAxis,xAxis,yAxis);dst[0]=xAxis[0];dst[1]=xAxis[1];dst[2]=xAxis[2];dst[3]=0;dst[4]=yAxis[0];dst[5]=yAxis[1];dst[6]=yAxis[2];dst[7]=0;dst[8]=zAxis[0];dst[9]=zAxis[1];dst[10]=zAxis[2];dst[11]=0;dst[12]=eye[0];dst[13]=eye[1];dst[14]=eye[2];dst[15]=1;return dst}function translation(v,dst){dst=dst||new MatType(16);dst[0]=1;dst[1]=0;dst[2]=0;dst[3]=0;dst[4]=0;dst[5]=1;dst[6]=0;dst[7]=0;dst[8]=0;dst[9]=0;dst[10]=1;dst[11]=0;dst[12]=v[0];dst[13]=v[1];dst[14]=v[2];dst[15]=1;return dst}function translate(m,v,dst){dst=dst||new MatType(16);var v0=v[0];var v1=v[1];var v2=v[2];var m00=m[0];var m01=m[1];var m02=m[2];var m03=m[3];var m10=m[1*4+0];var m11=m[1*4+1];var m12=m[1*4+2];var m13=m[1*4+3];var m20=m[2*4+0];var m21=m[2*4+1];var m22=m[2*4+2];var m23=m[2*4+3];var m30=m[3*4+0];var m31=m[3*4+1];var m32=m[3*4+2];var m33=m[3*4+3];if(m!==dst){dst[0]=m00;dst[1]=m01;dst[2]=m02;dst[3]=m03;dst[4]=m10;dst[5]=m11;dst[6]=m12;dst[7]=m13;dst[8]=m20;dst[9]=m21;dst[10]=m22;dst[11]=m23}dst[12]=m00*v0+m10*v1+m20*v2+m30;dst[13]=m01*v0+m11*v1+m21*v2+m31;dst[14]=m02*v0+m12*v1+m22*v2+m32;dst[15]=m03*v0+m13*v1+m23*v2+m33;return dst}function rotationX(angleInRadians,dst){dst=dst||new MatType(16);var c=Math.cos(angleInRadians);var s=Math.sin(angleInRadians);dst[0]=1;dst[1]=0;dst[2]=0;dst[3]=0;dst[4]=0;dst[5]=c;dst[6]=s;dst[7]=0;dst[8]=0;dst[9]=-s;dst[10]=c;dst[11]=0;dst[12]=0;dst[13]=0;dst[14]=0;dst[15]=1;return dst}function rotateX(m,angleInRadians,dst){dst=dst||new MatType(16);var m10=m[4];var m11=m[5];var m12=m[6];var m13=m[7];var m20=m[8];var m21=m[9];var m22=m[10];var m23=m[11];var c=Math.cos(angleInRadians);var s=Math.sin(angleInRadians);dst[4]=c*m10+s*m20;dst[5]=c*m11+s*m21;dst[6]=c*m12+s*m22;dst[7]=c*m13+s*m23;dst[8]=c*m20-s*m10;dst[9]=c*m21-s*m11;dst[10]=c*m22-s*m12;dst[11]=c*m23-s*m13;if(m!==dst){dst[0]=m[0];dst[1]=m[1];dst[2]=m[2];dst[3]=m[3];dst[12]=m[12];dst[13]=m[13];dst[14]=m[14];dst[15]=m[15]}return dst}function rotationY(angleInRadians,dst){dst=dst||new MatType(16);var c=Math.cos(angleInRadians);var s=Math.sin(angleInRadians);dst[0]=c;dst[1]=0;dst[2]=-s;dst[3]=0;dst[4]=0;dst[5]=1;dst[6]=0;dst[7]=0;dst[8]=s;dst[9]=0;dst[10]=c;dst[11]=0;dst[12]=0;dst[13]=0;dst[14]=0;dst[15]=1;return dst}function rotateY(m,angleInRadians,dst){dst=dst||new MatType(16);var m00=m[0*4+0];var m01=m[0*4+1];var m02=m[0*4+2];var m03=m[0*4+3];var m20=m[2*4+0];var m21=m[2*4+1];var m22=m[2*4+2];var m23=m[2*4+3];var c=Math.cos(angleInRadians);var s=Math.sin(angleInRadians);dst[0]=c*m00-s*m20;dst[1]=c*m01-s*m21;dst[2]=c*m02-s*m22;dst[3]=c*m03-s*m23;dst[8]=c*m20+s*m00;dst[9]=c*m21+s*m01;dst[10]=c*m22+s*m02;dst[11]=c*m23+s*m03;if(m!==dst){dst[4]=m[4];dst[5]=m[5];dst[6]=m[6];dst[7]=m[7];dst[12]=m[12];dst[13]=m[13];dst[14]=m[14];dst[15]=m[15]}return dst}function rotationZ(angleInRadians,dst){dst=dst||new MatType(16);var c=Math.cos(angleInRadians);var s=Math.sin(angleInRadians);dst[0]=c;dst[1]=s;dst[2]=0;dst[3]=0;dst[4]=-s;dst[5]=c;dst[6]=0;dst[7]=0;dst[8]=0;dst[9]=0;dst[10]=1;dst[11]=0;dst[12]=0;dst[13]=0;dst[14]=0;dst[15]=1;return dst}function rotateZ(m,angleInRadians,dst){dst=dst||new MatType(16);var m00=m[0*4+0];var m01=m[0*4+1];var m02=m[0*4+2];var m03=m[0*4+3];var m10=m[1*4+0];var m11=m[1*4+1];var m12=m[1*4+2];var m13=m[1*4+3];var c=Math.cos(angleInRadians);var s=Math.sin(angleInRadians);dst[0]=c*m00+s*m10;dst[1]=c*m01+s*m11;dst[2]=c*m02+s*m12;dst[3]=c*m03+s*m13;dst[4]=c*m10-s*m00;dst[5]=c*m11-s*m01;dst[6]=c*m12-s*m02;dst[7]=c*m13-s*m03;if(m!==dst){dst[8]=m[8];dst[9]=m[9];dst[10]=m[10];dst[11]=m[11];dst[12]=m[12];dst[13]=m[13];dst[14]=m[14];dst[15]=m[15]}return dst}function axisRotation(axis,angleInRadians,dst){dst=dst||new MatType(16);var x=axis[0];var y=axis[1];var z=axis[2];var n=Math.sqrt(x*x+y*y+z*z);x/=n;y/=n;z/=n;var xx=x*x;var yy=y*y;var zz=z*z;var c=Math.cos(angleInRadians);var s=Math.sin(angleInRadians);var oneMinusCosine=1-c;dst[0]=xx+(1-xx)*c;dst[1]=x*y*oneMinusCosine+z*s;dst[2]=x*z*oneMinusCosine-y*s;dst[3]=0;dst[4]=x*y*oneMinusCosine-z*s;dst[5]=yy+(1-yy)*c;dst[6]=y*z*oneMinusCosine+x*s;dst[7]=0;dst[8]=x*z*oneMinusCosine+y*s;dst[9]=y*z*oneMinusCosine-x*s;dst[10]=zz+(1-zz)*c;dst[11]=0;dst[12]=0;dst[13]=0;dst[14]=0;dst[15]=1;return dst}function axisRotate(m,axis,angleInRadians,dst){dst=dst||new MatType(16);var x=axis[0];var y=axis[1];var z=axis[2];var n=Math.sqrt(x*x+y*y+z*z);x/=n;y/=n;z/=n;var xx=x*x;var yy=y*y;var zz=z*z;var c=Math.cos(angleInRadians);var s=Math.sin(angleInRadians);var oneMinusCosine=1-c;var r00=xx+(1-xx)*c;var r01=x*y*oneMinusCosine+z*s;var r02=x*z*oneMinusCosine-y*s;var r10=x*y*oneMinusCosine-z*s;var r11=yy+(1-yy)*c;var r12=y*z*oneMinusCosine+x*s;var r20=x*z*oneMinusCosine+y*s;var r21=y*z*oneMinusCosine-x*s;var r22=zz+(1-zz)*c;var m00=m[0];var m01=m[1];var m02=m[2];var m03=m[3];var m10=m[4];var m11=m[5];var m12=m[6];var m13=m[7];var m20=m[8];var m21=m[9];var m22=m[10];var m23=m[11];dst[0]=r00*m00+r01*m10+r02*m20;dst[1]=r00*m01+r01*m11+r02*m21;dst[2]=r00*m02+r01*m12+r02*m22;dst[3]=r00*m03+r01*m13+r02*m23;dst[4]=r10*m00+r11*m10+r12*m20;dst[5]=r10*m01+r11*m11+r12*m21;dst[6]=r10*m02+r11*m12+r12*m22;dst[7]=r10*m03+r11*m13+r12*m23;dst[8]=r20*m00+r21*m10+r22*m20;dst[9]=r20*m01+r21*m11+r22*m21;dst[10]=r20*m02+r21*m12+r22*m22;dst[11]=r20*m03+r21*m13+r22*m23;if(m!==dst){dst[12]=m[12];dst[13]=m[13];dst[14]=m[14];dst[15]=m[15]}return dst}function scaling(v,dst){dst=dst||new MatType(16);dst[0]=v[0];dst[1]=0;dst[2]=0;dst[3]=0;dst[4]=0;dst[5]=v[1];dst[6]=0;dst[7]=0;dst[8]=0;dst[9]=0;dst[10]=v[2];dst[11]=0;dst[12]=0;dst[13]=0;dst[14]=0;dst[15]=1;return dst}function scale(m,v,dst){dst=dst||new MatType(16);var v0=v[0];var v1=v[1];var v2=v[2];dst[0]=v0*m[0*4+0];dst[1]=v0*m[0*4+1];dst[2]=v0*m[0*4+2];dst[3]=v0*m[0*4+3];dst[4]=v1*m[1*4+0];dst[5]=v1*m[1*4+1];dst[6]=v1*m[1*4+2];dst[7]=v1*m[1*4+3];dst[8]=v2*m[2*4+0];dst[9]=v2*m[2*4+1];dst[10]=v2*m[2*4+2];dst[11]=v2*m[2*4+3];if(m!==dst){dst[12]=m[12];dst[13]=m[13];dst[14]=m[14];dst[15]=m[15]}return m}function transformPoint(m,v,dst){dst=dst||v3.create();var v0=v[0];var v1=v[1];var v2=v[2];var d=v0*m[0*4+3]+v1*m[1*4+3]+v2*m[2*4+3]+m[3*4+3];dst[0]=(v0*m[0*4+0]+v1*m[1*4+0]+v2*m[2*4+0]+m[3*4+0])/d;dst[1]=(v0*m[0*4+1]+v1*m[1*4+1]+v2*m[2*4+1]+m[3*4+1])/d;dst[2]=(v0*m[0*4+2]+v1*m[1*4+2]+v2*m[2*4+2]+m[3*4+2])/d;return dst}function transformDirection(m,v,dst){dst=dst||v3.create();var v0=v[0];var v1=v[1];var v2=v[2];dst[0]=v0*m[0*4+0]+v1*m[1*4+0]+v2*m[2*4+0];dst[1]=v0*m[0*4+1]+v1*m[1*4+1]+v2*m[2*4+1];dst[2]=v0*m[0*4+2]+v1*m[1*4+2]+v2*m[2*4+2];return dst}function transformNormal(m,v,dst){dst=dst||v3.create();var mi=m4.inverse(m);var v0=v[0];var v1=v[1];var v2=v[2];dst[0]=v0*mi[0*4+0]+v1*mi[0*4+1]+v2*mi[0*4+2];dst[1]=v0*mi[1*4+0]+v1*mi[1*4+1]+v2*mi[1*4+2];dst[2]=v0*mi[2*4+0]+v1*mi[2*4+1]+v2*mi[2*4+2];return dst}return{axisRotate:axisRotate,axisRotation:axisRotation,create:identity,copy:copy,frustum:frustum,getAxis:getAxis,getTranslation:getTranslation,identity:identity,inverse:inverse,lookAt:lookAt,multiply:multiply,negate:negate,ortho:ortho,perspective:perspective,rotateX:rotateX,rotateY:rotateY,rotateZ:rotateZ,rotationX:rotationX,rotationY:rotationY,rotationZ:rotationZ,scale:scale,scaling:scaling,setTranslation:setTranslation,transformDirection:transformDirection,transformNormal:transformNormal,transformPoint:transformPoint,translate:translate,translation:translation,transpose:transpose}});"use strict";(function(root,factory){if(typeof define==="function"&&define.amd){define(["./twgl","./m4"],factory)}else{root.twgl=root.twgl||{};root.twgl.primitives=factory.call(root)}})(this,function(twgl,m4){twgl=twgl||this.twgl;m4=m4||twgl.m4;function augmentTypedArray(typedArray,numComponents){var cursor=0;typedArray.push=function(){for(var ii=0;ii<arguments.length;++ii){var value=arguments[ii];if(value instanceof Array||value.buffer&&value.buffer instanceof ArrayBuffer){for(var jj=0;jj<value.length;++jj){typedArray[cursor++]=value[jj]}}else{typedArray[cursor++]=value}}};typedArray.reset=function(opt_index){cursor=opt_index||0};typedArray.numComponents=numComponents;Object.defineProperty(typedArray,"numElements",{get:function(){return this.length/this.numComponents|0}});return typedArray}function createAugmentedTypedArray(numComponents,numElements,opt_type){var Type=opt_type||Float32Array;return augmentTypedArray(new Type(numComponents*numElements),numComponents)}function allButIndices(name){return name!=="indices"}function deindexVertices(vertices){var indices=vertices.indices;var newVertices={};var numElements=indices.length;function expandToUnindexed(channel){var srcBuffer=vertices[channel];var numComponents=srcBuffer.numComponents;var dstBuffer=createAugmentedTypedArray(numComponents,numElements,srcBuffer.constructor);for(var ii=0;ii<numElements;++ii){var ndx=indices[ii];var offset=ndx*numComponents;for(var jj=0;jj<numComponents;++jj){dstBuffer.push(srcBuffer[offset+jj])}}newVertices[channel]=dstBuffer}Object.keys(vertices).filter(allButIndices).forEach(expandToUnindexed);return newVertices}function flattenNormals(vertices){if(vertices.indices){throw"can't flatten normals of indexed vertices. deindex them first"}var normals=vertices.normal;var numNormals=normals.length;for(var ii=0;ii<numNormals;ii+=9){var nax=normals[ii+0];var nay=normals[ii+1];var naz=normals[ii+2];var nbx=normals[ii+3];var nby=normals[ii+4];var nbz=normals[ii+5];var ncx=normals[ii+6];var ncy=normals[ii+7];var ncz=normals[ii+8];var nx=nax+nbx+ncx;var ny=nay+nby+ncy;var nz=naz+nbz+ncz;var length=Math.sqrt(nx*nx+ny*ny+nz*nz);nx/=length;ny/=length;nz/=length;normals[ii+0]=nx;normals[ii+1]=ny;normals[ii+2]=nz;normals[ii+3]=nx;normals[ii+4]=ny;normals[ii+5]=nz;normals[ii+6]=nx;normals[ii+7]=ny;normals[ii+8]=nz}return vertices}function applyFuncToV3Array(array,matrix,fn){var len=array.length;var tmp=new Float32Array(3);for(var ii=0;ii<len;ii+=3){fn(matrix,[array[ii],array[ii+1],array[ii+2]],tmp);array[ii]=tmp[0];array[ii+1]=tmp[1];array[ii+2]=tmp[2]}}function transformNormal(mi,v,dst){dst=dst||v3.create();var v0=v[0];var v1=v[1];var v2=v[2];dst[0]=v0*mi[0*4+0]+v1*mi[0*4+1]+v2*mi[0*4+2];dst[1]=v0*mi[1*4+0]+v1*mi[1*4+1]+v2*mi[1*4+2];dst[2]=v0*mi[2*4+0]+v1*mi[2*4+1]+v2*mi[2*4+2];return dst}function reorientDirections(array,matrix){applyFuncToV3Array(array,matrix,m4.transformDirection);return array}function reorientNormals(array,matrix){applyFuncToV3Array(array,m4.inverse(matrix),transformNormal);return array}function reorientPositions(array,matrix){applyFuncToV3Array(array,matrix,m4.transformPoint);return array}function reorientVertices(arrays,matrix){Object.keys(arrays).forEach(function(name){var array=arrays[name];if(name.indexOf("pos")>=0){reorientPositions(array,matrix)}else if(name.indexOf("tan")>=0||name.indexOf("binorm")>=0){reorientDirections(array,matrix);

}else if(name.indexOf("norm")>=0){reorientNormals(array,matrix)}});return arrays}function createPlaneVertices(width,depth,subdivisionsWidth,subdivisionsDepth,matrix){width=width||1;depth=depth||1;subdivisionsWidth=subdivisionsWidth||1;subdivisionsDepth=subdivisionsDepth||1;matrix=matrix||m4.identity();var numVertices=(subdivisionsWidth+1)*(subdivisionsDepth+1);var positions=createAugmentedTypedArray(3,numVertices);var normals=createAugmentedTypedArray(3,numVertices);var texcoords=createAugmentedTypedArray(2,numVertices);for(var z=0;z<=subdivisionsDepth;z++){for(var x=0;x<=subdivisionsWidth;x++){var u=x/subdivisionsWidth;var v=z/subdivisionsDepth;positions.push(width*u-width*.5,0,depth*v-depth*.5);normals.push(0,1,0);texcoords.push(u,v)}}var numVertsAcross=subdivisionsWidth+1;var indices=createAugmentedTypedArray(3,subdivisionsWidth*subdivisionsDepth*2,Uint16Array);for(var z=0;z<subdivisionsDepth;z++){for(var x=0;x<subdivisionsWidth;x++){indices.push((z+0)*numVertsAcross+x,(z+1)*numVertsAcross+x,(z+0)*numVertsAcross+x+1);indices.push((z+1)*numVertsAcross+x,(z+1)*numVertsAcross+x+1,(z+0)*numVertsAcross+x+1)}}var arrays=reorientVertices({position:positions,normal:normals,texcoord:texcoords,indices:indices},matrix);return arrays}function createSphereVertices(radius,subdivisionsAxis,subdivisionsHeight,opt_startLatitudeInRadians,opt_endLatitudeInRadians,opt_startLongitudeInRadians,opt_endLongitudeInRadians){if(subdivisionsAxis<=0||subdivisionsHeight<=0){throw Error("subdivisionAxis and subdivisionHeight must be > 0")}opt_startLatitudeInRadians=opt_startLatitudeInRadians||0;opt_endLatitudeInRadians=opt_endLatitudeInRadians||Math.PI;opt_startLongitudeInRadians=opt_startLongitudeInRadians||0;opt_endLongitudeInRadians=opt_endLongitudeInRadians||Math.PI*2;var latRange=opt_endLatitudeInRadians-opt_startLatitudeInRadians;var longRange=opt_endLongitudeInRadians-opt_startLongitudeInRadians;var numVertices=(subdivisionsAxis+1)*(subdivisionsHeight+1);var positions=createAugmentedTypedArray(3,numVertices);var normals=createAugmentedTypedArray(3,numVertices);var texCoords=createAugmentedTypedArray(2,numVertices);for(var y=0;y<=subdivisionsHeight;y++){for(var x=0;x<=subdivisionsAxis;x++){var u=x/subdivisionsAxis;var v=y/subdivisionsHeight;var theta=longRange*u;var phi=latRange*v;var sinTheta=Math.sin(theta);var cosTheta=Math.cos(theta);var sinPhi=Math.sin(phi);var cosPhi=Math.cos(phi);var ux=cosTheta*sinPhi;var uy=cosPhi;var uz=sinTheta*sinPhi;positions.push(radius*ux,radius*uy,radius*uz);normals.push(ux,uy,uz);texCoords.push(1-u,v)}}var numVertsAround=subdivisionsAxis+1;var indices=createAugmentedTypedArray(3,subdivisionsAxis*subdivisionsHeight*2,Uint16Array);for(var x=0;x<subdivisionsAxis;x++){for(var y=0;y<subdivisionsHeight;y++){indices.push((y+0)*numVertsAround+x,(y+0)*numVertsAround+x+1,(y+1)*numVertsAround+x);indices.push((y+1)*numVertsAround+x,(y+0)*numVertsAround+x+1,(y+1)*numVertsAround+x+1)}}return{position:positions,normal:normals,texcoord:texCoords,indices:indices}}var CUBE_FACE_INDICES=[[3,7,5,1],[6,2,0,4],[6,7,3,2],[0,1,5,4],[7,6,4,5],[2,3,1,0]];function createCubeVertices(size){var k=size/2;var cornerVertices=[[-k,-k,-k],[+k,-k,-k],[-k,+k,-k],[+k,+k,-k],[-k,-k,+k],[+k,-k,+k],[-k,+k,+k],[+k,+k,+k]];var faceNormals=[[+1,+0,+0],[-1,+0,+0],[+0,+1,+0],[+0,-1,+0],[+0,+0,+1],[+0,+0,-1]];var uvCoords=[[1,0],[0,0],[0,1],[1,1]];var numVertices=6*4;var positions=createAugmentedTypedArray(3,numVertices);var normals=createAugmentedTypedArray(3,numVertices);var texCoords=createAugmentedTypedArray(2,numVertices);var indices=createAugmentedTypedArray(3,6*2,Uint16Array);for(var f=0;f<6;++f){var faceIndices=CUBE_FACE_INDICES[f];for(var v=0;v<4;++v){var position=cornerVertices[faceIndices[v]];var normal=faceNormals[f];var uv=uvCoords[v];positions.push(position);normals.push(normal);texCoords.push(uv)}var offset=4*f;indices.push(offset+0,offset+1,offset+2);indices.push(offset+0,offset+2,offset+3)}return{position:positions,normal:normals,texcoord:texCoords,indices:indices}}function createTruncatedConeVertices(bottomRadius,topRadius,height,radialSubdivisions,verticalSubdivisions,opt_topCap,opt_bottomCap){if(radialSubdivisions<3){throw Error("radialSubdivisions must be 3 or greater")}if(verticalSubdivisions<1){throw Error("verticalSubdivisions must be 1 or greater")}var topCap=opt_topCap===undefined?true:opt_topCap;var bottomCap=opt_bottomCap===undefined?true:opt_bottomCap;var extra=(topCap?2:0)+(bottomCap?2:0);var numVertices=(radialSubdivisions+1)*(verticalSubdivisions+1+extra);var positions=createAugmentedTypedArray(3,numVertices);var normals=createAugmentedTypedArray(3,numVertices);var texCoords=createAugmentedTypedArray(2,numVertices);var indices=createAugmentedTypedArray(3,radialSubdivisions*(verticalSubdivisions+extra)*2,Uint16Array);var vertsAroundEdge=radialSubdivisions+1;var slant=Math.atan2(bottomRadius-topRadius,height);var cosSlant=Math.cos(slant);var sinSlant=Math.sin(slant);var start=topCap?-2:0;var end=verticalSubdivisions+(bottomCap?2:0);for(var yy=start;yy<=end;++yy){var v=yy/verticalSubdivisions;var y=height*v;var ringRadius;if(yy<0){y=0;v=1;ringRadius=bottomRadius}else if(yy>verticalSubdivisions){y=height;v=1;ringRadius=topRadius}else{ringRadius=bottomRadius+(topRadius-bottomRadius)*(yy/verticalSubdivisions)}if(yy===-2||yy===verticalSubdivisions+2){ringRadius=0;v=0}y-=height/2;for(var ii=0;ii<vertsAroundEdge;++ii){var sin=Math.sin(ii*Math.PI*2/radialSubdivisions);var cos=Math.cos(ii*Math.PI*2/radialSubdivisions);positions.push(sin*ringRadius,y,cos*ringRadius);normals.push(yy<0||yy>verticalSubdivisions?0:sin*cosSlant,yy<0?-1:yy>verticalSubdivisions?1:sinSlant,yy<0||yy>verticalSubdivisions?0:cos*cosSlant);texCoords.push(ii/radialSubdivisions,1-v)}}for(var yy=0;yy<verticalSubdivisions+extra;++yy){for(var ii=0;ii<radialSubdivisions;++ii){indices.push(vertsAroundEdge*(yy+0)+0+ii,vertsAroundEdge*(yy+0)+1+ii,vertsAroundEdge*(yy+1)+1+ii);indices.push(vertsAroundEdge*(yy+0)+0+ii,vertsAroundEdge*(yy+1)+1+ii,vertsAroundEdge*(yy+1)+0+ii)}}return{position:positions,normal:normals,texcoord:texCoords,indices:indices}}function expandRLEData(rleData,padding){padding=padding||[];var data=[];for(var ii=0;ii<rleData.length;ii+=4){var runLength=rleData[ii];var element=rleData.slice(ii+1,ii+4);element.push.apply(element,padding);for(var jj=0;jj<runLength;++jj){data.push.apply(data,element)}}return data}function create3DFVertices(){var positions=[0,0,0,0,150,0,30,0,0,0,150,0,30,150,0,30,0,0,30,0,0,30,30,0,100,0,0,30,30,0,100,30,0,100,0,0,30,60,0,30,90,0,67,60,0,30,90,0,67,90,0,67,60,0,0,0,30,30,0,30,0,150,30,0,150,30,30,0,30,30,150,30,30,0,30,100,0,30,30,30,30,30,30,30,100,0,30,100,30,30,30,60,30,67,60,30,30,90,30,30,90,30,67,60,30,67,90,30,0,0,0,100,0,0,100,0,30,0,0,0,100,0,30,0,0,30,100,0,0,100,30,0,100,30,30,100,0,0,100,30,30,100,0,30,30,30,0,30,30,30,100,30,30,30,30,0,100,30,30,100,30,0,30,30,0,30,60,30,30,30,30,30,30,0,30,60,0,30,60,30,30,60,0,67,60,30,30,60,30,30,60,0,67,60,0,67,60,30,67,60,0,67,90,30,67,60,30,67,60,0,67,90,0,67,90,30,30,90,0,30,90,30,67,90,30,30,90,0,67,90,30,67,90,0,30,90,0,30,150,30,30,90,30,30,90,0,30,150,0,30,150,30,0,150,0,0,150,30,30,150,30,0,150,0,30,150,30,30,150,0,0,0,0,0,0,30,0,150,30,0,0,0,0,150,30,0,150,0];var texcoords=[.22,.19,.22,.79,.34,.19,.22,.79,.34,.79,.34,.19,.34,.19,.34,.31,.62,.19,.34,.31,.62,.31,.62,.19,.34,.43,.34,.55,.49,.43,.34,.55,.49,.55,.49,.43,0,0,1,0,0,1,0,1,1,0,1,1,0,0,1,0,0,1,0,1,1,0,1,1,0,0,1,0,0,1,0,1,1,0,1,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1,1,0,1,0,0,1,0,1,1,0,0,0,1,1,1,0,0,1,1,1,0,0,0,0,1,1,1,0,0,1,1,1,0];var normals=expandRLEData([18,0,0,1,18,0,0,-1,6,0,1,0,6,1,0,0,6,0,-1,0,6,1,0,0,6,0,1,0,6,1,0,0,6,0,-1,0,6,1,0,0,6,0,-1,0,6,-1,0,0]);var colors=expandRLEData([18,200,70,120,18,80,70,200,6,70,200,210,6,200,200,70,6,210,100,70,6,210,160,70,6,70,180,210,6,100,70,210,6,76,210,100,6,140,210,80,6,90,130,110,6,160,160,220],[255]);var numVerts=positions.length/3;var arrays={position:createAugmentedTypedArray(3,numVerts),texcoord:createAugmentedTypedArray(2,numVerts),normal:createAugmentedTypedArray(3,numVerts),color:createAugmentedTypedArray(4,numVerts,Uint8Array),indices:createAugmentedTypedArray(3,numVerts/3,Uint16Array)};arrays.position.push(positions);arrays.texcoord.push(texcoords);arrays.normal.push(normals);arrays.color.push(colors);for(var ii=0;ii<numVerts;++ii){arrays.indices.push(ii)}return arrays}function randInt(range){return Math.random()*range|0}function makeRandomVertexColors(vertices,options){options=options||{};var numElements=vertices.position.numElements;var vcolors=createAugmentedTypedArray(4,numElements,Uint8Array);var rand=options.rand||function(ndx,channel){return channel<3?randInt(256):255};vertices.color=vcolors;if(vertices.indices){for(var ii=0;ii<numElements;++ii){vcolors.push(rand(ii,0),rand(ii,1),rand(ii,2),rand(ii,3))}}else{var numVertsPerColor=options.vertsPerColor||3;var numSets=numElements/numVertsPerColor;for(var ii=0;ii<numSets;++ii){var color=[rand(ii,0),rand(ii,1),rand(ii,2),rand(ii,3)];for(var jj=0;jj<numVertsPerColor;++jj){vcolors.push(color)}}}return vertices}function createBufferFunc(fn){return function(gl){var arrays=fn.apply(this,Array.prototype.slice.call(arguments,1));return twgl.createBuffersFromArrays(gl,arrays)}}function createBufferInfoFunc(fn){return function(gl){var arrays=fn.apply(null,Array.prototype.slice.call(arguments,1));return twgl.createBufferInfoFromArrays(gl,arrays)}}return{create3DFBufferInfo:createBufferInfoFunc(create3DFVertices),create3DFBuffer:createBufferFunc(create3DFVertices),create3DFVertices:create3DFVertices,createAugmentedTypedArray:createAugmentedTypedArray,createCubeBufferInfo:createBufferInfoFunc(createCubeVertices),createCubeBuffers:createBufferFunc(createCubeVertices),createCubeVertices:createCubeVertices,createPlaneBufferInfo:createBufferInfoFunc(createPlaneVertices),createPlaneBuffers:createBufferFunc(createPlaneVertices),createPlaneVertices:createPlaneVertices,createSphereBufferInfo:createBufferInfoFunc(createSphereVertices),createSphereBuffers:createBufferFunc(createSphereVertices),createSphereVertices:createSphereVertices,createTruncatedConeBufferInfo:createBufferInfoFunc(createTruncatedConeVertices),createTruncatedConeBuffers:createBufferFunc(createTruncatedConeVertices),createTruncatedConeVertices:createTruncatedConeVertices,deindexVertices:deindexVertices,flattenNormals:flattenNormals,makeRandomVertexColors:makeRandomVertexColors,reorientDirections:reorientDirections,reorientNormals:reorientNormals,reorientPositions:reorientPositions,reorientVertices:reorientVertices}});